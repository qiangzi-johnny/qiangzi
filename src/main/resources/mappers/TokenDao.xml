<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.krund.hotel.manage.dao.TokenDao">
  <resultMap id="BaseResultMap" type="com.krund.hotel.manage.entity.Token">
    <constructor>
      <idArg column="hotel_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="token" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="validity" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="ip" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    hotel_id, token, validity, ip, create_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from token
    where hotel_id = #{hotelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from token
    where hotel_id = #{hotelId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.krund.hotel.manage.entity.Token">
    insert into token (hotel_id, token, validity, 
      ip, create_date)
    values (#{hotelId,jdbcType=INTEGER}, #{token,jdbcType=CHAR}, #{validity,jdbcType=TIMESTAMP}, 
      #{ip,jdbcType=CHAR}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.krund.hotel.manage.entity.Token">
    insert into token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hotelId != null">
        hotel_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="validity != null">
        validity,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hotelId != null">
        #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=CHAR},
      </if>
      <if test="validity != null">
        #{validity,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.krund.hotel.manage.entity.Token">
    update token
    <set>
      <if test="token != null">
        token = #{token,jdbcType=CHAR},
      </if>
      <if test="validity != null">
        validity = #{validity,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where hotel_id = #{hotelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.krund.hotel.manage.entity.Token">
    update token
    set token = #{token,jdbcType=CHAR},
      validity = #{validity,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=CHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where hotel_id = #{hotelId,jdbcType=INTEGER}
  </update>
  
  <select id="verifyToken" resultType="boolean">
    select count(1) from token where `hotel_id` = #{id} and `token` = #{token} and <![CDATA[`validity` >= #{validity}]]>
  </select>
</mapper>