<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.krund.hotel.manage.dao.ManagerDao">
  <resultMap id="BaseResultMap" type="com.krund.hotel.manage.entity.Manager">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="openid" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="username" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="date_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, openid, username, password, date_create
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from manager
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from manager
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.krund.hotel.manage.entity.Manager">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into manager (openid, username, password)
    values (#{openid,jdbcType=CHAR}, #{username,jdbcType=CHAR}, #{password,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.krund.hotel.manage.entity.Manager">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openid != null">
        openid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openid != null">
        #{openid,jdbcType=CHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.krund.hotel.manage.entity.Manager">
    update manager
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=CHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.krund.hotel.manage.entity.Manager">
    update manager
    set openid = #{openid,jdbcType=CHAR},
      username = #{username,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--登录验证用户名密码-->
  <select id="login" resultType="com.krund.hotel.manage.entity.Manager">
    select
    <include refid="Base_Column_List" />
    from manager
    where `username` = #{username}
    and `password` = #{password} limit 1
  </select>

  <select id="getByOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from manager
    where openid = #{openId,jdbcType=VARCHAR} limit 1
  </select>

  <select id="getByToken" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    m.id id,
    m.openid openid,
    m.username username,
    m.password password,
    m.date_create date_create
    from manager m left join token t on m.id = t.hotel_id
    where t.token = #{token} limit 1
  </select>
</mapper>