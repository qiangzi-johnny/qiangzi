<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.krund.hotel.manage.dao.OrderDao">
  <resultMap id="BaseResultMap" type="com.krund.hotel.manage.entity.Order">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="m_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="hotel_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="orderno" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="ordertype" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="livetype" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="roomtype_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="room_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="contacts" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="source" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="date_in" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="date_out" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="actualname" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="iccard" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="idcard" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="pay_amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="date_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, m_id, hotel_id, orderno, ordertype, livetype, roomtype_id, room_id, contacts, 
    source, date_in, date_out, actualname, iccard, idcard, phone, pay_amount, status, 
    remark, date_create
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.krund.hotel.manage.entity.Order">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `order` (m_id, hotel_id, orderno, 
      ordertype, livetype, roomtype_id, 
      room_id, contacts, source, 
      date_in, date_out, actualname, 
      iccard, idcard, phone, pay_amount, 
      status, remark
      )
    values (#{mId,jdbcType=INTEGER}, #{hotelId,jdbcType=INTEGER}, #{orderno,jdbcType=CHAR}, 
      #{ordertype,jdbcType=TINYINT}, #{livetype,jdbcType=TINYINT}, #{roomtypeId,jdbcType=INTEGER}, 
      #{roomId,jdbcType=INTEGER}, #{contacts,jdbcType=CHAR}, #{source,jdbcType=CHAR}, 
      #{dateIn,jdbcType=TIMESTAMP}, #{dateOut,jdbcType=TIMESTAMP}, #{actualname,jdbcType=CHAR}, 
      #{iccard,jdbcType=CHAR}, #{idcard,jdbcType=CHAR}, #{phone,jdbcType=CHAR}, #{payAmount,jdbcType=DECIMAL}, 
      #{status,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.krund.hotel.manage.entity.Order">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mId != null">
        m_id,
      </if>
      <if test="hotelId != null">
        hotel_id,
      </if>
      <if test="orderno != null">
        orderno,
      </if>
      <if test="ordertype != null">
        ordertype,
      </if>
      <if test="livetype != null">
        livetype,
      </if>
      <if test="roomtypeId != null">
        roomtype_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="dateIn != null">
        date_in,
      </if>
      <if test="dateOut != null">
        date_out,
      </if>
      <if test="actualname != null">
        actualname,
      </if>
      <if test="iccard != null">
        iccard,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mId != null">
        #{mId,jdbcType=INTEGER},
      </if>
      <if test="hotelId != null">
        #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="orderno != null">
        #{orderno,jdbcType=CHAR},
      </if>
      <if test="ordertype != null">
        #{ordertype,jdbcType=TINYINT},
      </if>
      <if test="livetype != null">
        #{livetype,jdbcType=TINYINT},
      </if>
      <if test="roomtypeId != null">
        #{roomtypeId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=CHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=CHAR},
      </if>
      <if test="dateIn != null">
        #{dateIn,jdbcType=TIMESTAMP},
      </if>
      <if test="dateOut != null">
        #{dateOut,jdbcType=TIMESTAMP},
      </if>
      <if test="actualname != null">
        #{actualname,jdbcType=CHAR},
      </if>
      <if test="iccard != null">
        #{iccard,jdbcType=CHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.krund.hotel.manage.entity.Order">
    update `order`
    <set>
      <if test="mId != null">
        m_id = #{mId,jdbcType=INTEGER},
      </if>
      <if test="hotelId != null">
        hotel_id = #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="orderno != null">
        orderno = #{orderno,jdbcType=CHAR},
      </if>
      <if test="ordertype != null">
        ordertype = #{ordertype,jdbcType=TINYINT},
      </if>
      <if test="livetype != null">
        livetype = #{livetype,jdbcType=TINYINT},
      </if>
      <if test="roomtypeId != null">
        roomtype_id = #{roomtypeId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=CHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=CHAR},
      </if>
      <if test="dateIn != null">
        date_in = #{dateIn,jdbcType=TIMESTAMP},
      </if>
      <if test="dateOut != null">
        date_out = #{dateOut,jdbcType=TIMESTAMP},
      </if>
      <if test="actualname != null">
        actualname = #{actualname,jdbcType=CHAR},
      </if>
      <if test="iccard != null">
        iccard = #{iccard,jdbcType=CHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.krund.hotel.manage.entity.Order">
    update `order`
    set m_id = #{mId,jdbcType=INTEGER},
      hotel_id = #{hotelId,jdbcType=INTEGER},
      orderno = #{orderno,jdbcType=CHAR},
      ordertype = #{ordertype,jdbcType=TINYINT},
      livetype = #{livetype,jdbcType=TINYINT},
      roomtype_id = #{roomtypeId,jdbcType=INTEGER},
      room_id = #{roomId,jdbcType=INTEGER},
      contacts = #{contacts,jdbcType=CHAR},
      source = #{source,jdbcType=CHAR},
      date_in = #{dateIn,jdbcType=TIMESTAMP},
      date_out = #{dateOut,jdbcType=TIMESTAMP},
      actualname = #{actualname,jdbcType=CHAR},
      iccard = #{iccard,jdbcType=CHAR},
      idcard = #{idcard,jdbcType=CHAR},
      phone = #{phone,jdbcType=CHAR},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 根据条件搜索 -->
  <select id="searchSelective" parameterType="com.krund.hotel.manage.entity.Order" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from `order`
      <where>
          <if test="mId != null">
              m_id = #{mId,jdbcType=INTEGER}
          </if>
          <if test="hotelId != null">
              and hotel_id = #{hotelId,jdbcType=INTEGER}
          </if>
          <if test="orderno != null">
              and orderno = #{orderno,jdbcType=CHAR}
          </if>
          <if test="ordertype != null">
              and ordertype = #{ordertype,jdbcType=TINYINT}
          </if>
          <if test="livetype != null">
              and livetype = #{livetype,jdbcType=TINYINT}
          </if>
          <if test="roomtypeId != null">
              and roomtype_id = #{roomtypeId,jdbcType=INTEGER}
          </if>
          <if test="roomId != null">
              and room_id = #{roomId,jdbcType=INTEGER}
          </if>
          <if test="contacts != null">
              and contacts = #{contacts,jdbcType=CHAR}
          </if>
          <if test="source != null">
              and source = #{source,jdbcType=CHAR}
          </if>
          <if test="dateIn != null">
              and date_in = #{dateIn,jdbcType=TIMESTAMP}
          </if>
          <if test="dateOut != null">
              and date_out = #{dateOut,jdbcType=TIMESTAMP}
          </if>
          <if test="actualname != null">
              and actualname = #{actualname,jdbcType=CHAR}
          </if>
          <if test="iccard != null">
              and iccard = #{iccard,jdbcType=CHAR}
          </if>
          <if test="idcard != null">
              and idcard = #{idcard,jdbcType=CHAR}
          </if>
          <if test="phone != null">
              and phone = #{phone,jdbcType=CHAR}
          </if>
          <if test="payAmount != null">
              and pay_amount = #{payAmount,jdbcType=DECIMAL}
          </if>
          <if test="status != null">
              and status = #{status,jdbcType=TINYINT}
          </if>
          <if test="remark != null">
              and remark = #{remark,jdbcType=VARCHAR}
          </if>
      </where>
  </select>

  <select id="searchByWechat" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `order`
    where orderno in
    (#{ordernos})
    <if test="status == 1">
     and status = 1 and isnull(pay_amount)
    </if>
    <if test="status == 2">
      and status = 1 and not isnull(pay_amount)
    </if>
    <if test="status == 3">
      and status = 2 and not isnull(pay_amount)
    </if>
  </select>

  <select id="getOrderByRoomId" parameterType="java.lang.Integer" resultType="com.krund.hotel.manage.entity.Order">
    select
    <include refid="Base_Column_List" />
    from `order`
    where room_id = #{roomId} and status = 2 limit 1
  </select>

  <select id="checkStatus" parameterType="com.krund.hotel.manage.entity.Order" resultType="java.lang.Long">
    select count(*) from `order` where m_id = #{mId} and hotel_id = #{hotelId} and idcard = #{idcard} and status = 2
  </select>

  <!-- 根据条件搜索 分页查询 -->
  <select id="searchSelectivePage" parameterType="com.krund.hotel.manage.entity.Order" resultType="com.krund.hotel.manage.entity.Order">
    select
    o.id,
    o.m_id,
    o.hotel_id,
    o.orderno,
    o.ordertype,
    o.livetype,
    o.roomtype_id,
    o.room_id,
    o.contacts,
    o.source,
    o.date_in,
    o.date_out,
    o.actualname,
    o.iccard,
    o.idcard,
    o.phone,
    o.pay_amount,
    o.status,
    o.remark,
    o.date_create,
    r.roomno,
    t.name roomtypeName
    from `order` o left join room r on o.room_id = r.id left join roomtype t on o.roomtype_id = t.id
    <where>
      o.delete_flag = '0'
      <if test="hotelId != null">
        and o.hotel_id = #{hotelId}
      </if>
      <if test="roomtypeId != null">
        and o.roomtype_id = #{roomtypeId}
      </if>
      <if test="status != null">
        and o.status = #{status}
      </if>
      <if test="dateCreateStart != null and dateCreateStart != '' and dateCreateEnd != null and dateCreateEnd != ''">
        and (DATE_FORMAT(o.date_create,'%Y-%m-%d') >= #{dateCreateStart} and DATE_FORMAT(o.date_create,'%Y-%m-%d') <![CDATA[<=]]> #{dateCreateEnd})
      </if>
      <if test="criteria != null and criteria != ''">
        and (r.roomno like concat('%',#{criteria},'%') or o.phone like concat('%',#{criteria},'%') or o.actualname like concat('%',#{criteria},'%'))
      </if>
    </where>
    order by o.date_create desc limit #{pageNum}, #{pageSize}
  </select>

  <select id="searchSelectivePageCount" parameterType="com.krund.hotel.manage.entity.Order" resultType="java.lang.Long">
    select
    count(*)
    from `order` o left join room r on o.room_id = r.id left join roomtype t on o.roomtype_id = t.id
    <where>
      o.delete_flag = '0'
      <if test="hotelId != null">
        and o.hotel_id = #{hotelId}
      </if>
      <if test="roomtypeId != null">
        and o.roomtype_id = #{roomtypeId}
      </if>
      <if test="status != null">
        and o.status = #{status}
      </if>
      <if test="dateCreateStart != null and dateCreateStart != '' and dateCreateEnd != null and dateCreateEnd != ''">
        and (DATE_FORMAT(o.date_create,'%Y-%m-%d') >= #{dateCreateStart} and DATE_FORMAT(o.date_create,'%Y-%m-%d') <![CDATA[<=]]> #{dateCreateEnd})
      </if>
      <if test="criteria != null and criteria != ''">
        and (r.roomno like concat('%',#{criteria},'%') or o.phone like concat('%',#{criteria},'%') or o.actualname like concat('%',#{criteria},'%'))
      </if>
    </where>
  </select>

  <update id="fakeDelete" parameterType="java.lang.Integer">
    update `order` set delete_flag = '1' where id = #{id} and status = 1
  </update>
</mapper>